[{"/home/bryanwg/projects/Tinder-Eats/Frontend/src/index.tsx":"1","/home/bryanwg/projects/Tinder-Eats/Frontend/src/reportWebVitals.ts":"2","/home/bryanwg/projects/Tinder-Eats/Frontend/src/theme.ts":"3","/home/bryanwg/projects/Tinder-Eats/Frontend/src/App.tsx":"4","/home/bryanwg/projects/Tinder-Eats/Frontend/src/firebaseInit.ts":"5","/home/bryanwg/projects/Tinder-Eats/Frontend/src/Pages/Main.tsx":"6","/home/bryanwg/projects/Tinder-Eats/Frontend/src/Component/Navbar.tsx":"7","/home/bryanwg/projects/Tinder-Eats/Frontend/src/mock.ts":"8","/home/bryanwg/projects/Tinder-Eats/Frontend/src/Component/Card.tsx":"9","/home/bryanwg/projects/Tinder-Eats/Frontend/src/Pages/Matches.tsx":"10","/home/bryanwg/projects/Tinder-Eats/Frontend/src/functions.ts":"11"},{"size":761,"mtime":1627275992876,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1626771840006,"results":"14","hashOfConfig":"13"},{"size":320,"mtime":1626948289336,"results":"15","hashOfConfig":"13"},{"size":4295,"mtime":1627278998276,"results":"16","hashOfConfig":"13"},{"size":673,"mtime":1626947375996,"results":"17","hashOfConfig":"13"},{"size":3642,"mtime":1627295429946,"results":"18","hashOfConfig":"13"},{"size":5933,"mtime":1627275992876,"results":"19","hashOfConfig":"13"},{"size":36544,"mtime":1627294618226,"results":"20","hashOfConfig":"13"},{"size":7593,"mtime":1627318340606,"results":"21","hashOfConfig":"13"},{"size":3112,"mtime":1627294567796,"results":"22","hashOfConfig":"13"},{"size":409,"mtime":1627288360866,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"bc0pba",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/bryanwg/projects/Tinder-Eats/Frontend/src/index.tsx",["48"],"/home/bryanwg/projects/Tinder-Eats/Frontend/src/reportWebVitals.ts",[],"/home/bryanwg/projects/Tinder-Eats/Frontend/src/theme.ts",[],"/home/bryanwg/projects/Tinder-Eats/Frontend/src/App.tsx",["49","50","51","52","53","54"],"/home/bryanwg/projects/Tinder-Eats/Frontend/src/firebaseInit.ts",[],"/home/bryanwg/projects/Tinder-Eats/Frontend/src/Pages/Main.tsx",["55","56","57","58"],"/home/bryanwg/projects/Tinder-Eats/Frontend/src/Component/Navbar.tsx",["59","60","61"],"import { ReactNode } from 'react';\nimport {\n    Box,\n    Flex,\n    Avatar,\n    HStack,\n    Link,\n    IconButton,\n    Button,\n    Menu,\n    Icon,\n    MenuButton,\n    MenuList,\n    MenuItem,\n    MenuDivider,\n    useDisclosure,\n    useColorModeValue,\n    Stack,\n    Text,\n    useColorMode\n} from '@chakra-ui/react';\nimport {\n    HamburgerIcon,\n    CloseIcon,\n    AddIcon,\n    MoonIcon,\n    SunIcon\n} from '@chakra-ui/icons';\nimport { ReactComponent as TinderEatsIcon } from '../Icons/tinderEats.svg';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { GoSignOut } from 'react-icons/go';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport firebaseInit from '../firebaseInit';\n\nfirebaseInit();\nconst auth = firebase.auth();\n\nconst Links = [\n    { label: 'Find a Bite!', link: '/' },\n    { label: 'Matches', link: '/Matches' }\n];\n\nconst NavLink = ({\n    children\n}: {\n    children: { label: string; link: string };\n}) => (\n    <Link\n        as={RouteLink}\n        to={children.link}\n        px={2}\n        py={1}\n        rounded={'md'}\n        _hover={{\n            textDecoration: 'none',\n            bg: useColorModeValue('gray.200', 'gray.700')\n        }}\n        href={'#'}\n    >\n        {children.label}\n    </Link>\n);\n\nexport default function PrimaryLayout(props: any) {\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    const { colorMode, toggleColorMode } = useColorMode();\n    //console.log(auth.currentUser.uid)\n    return (\n        <>\n            <Box bg={useColorModeValue('gray.100', 'gray.900')} px={4}>\n                <Flex\n                    h={16}\n                    alignItems={'center'}\n                    justifyContent={'space-between'}\n                >\n                    <IconButton\n                        size={'md'}\n                        icon={isOpen ? <CloseIcon /> : <HamburgerIcon />}\n                        aria-label={'Open Menu'}\n                        display={{ md: 'none' }}\n                        onClick={isOpen ? onClose : onOpen}\n                        \n                    />\n                    <HStack spacing={8} alignItems={'center'}>\n                        <HStack>\n                            <Icon as={TinderEatsIcon} boxSize=\"10\" />\n                            <Text\n                                color={useColorModeValue('black', 'gray.300')}\n                                fontWeight=\"medium\"\n                            >\n                                Tinder Eats\n                            </Text>\n                        </HStack>\n                        <HStack\n                            as={'nav'}\n                            spacing={4}\n                            display={{ base: 'none', md: 'flex' }}\n                        >\n                            {Links.map((link) => (\n                                <NavLink key={link.label}>{link}</NavLink>\n                            ))}\n                        </HStack>\n                    </HStack>\n                    <Flex alignItems={'center'}>\n                        <IconButton\n                            bg={useColorModeValue('gray.100', 'gray.1000')}\n                            display={{ base: 'none', md: 'block' }}\n                            size={'sm'}\n                            icon={\n                                colorMode === 'light' ? (\n                                    <MoonIcon />\n                                ) : (\n                                    <SunIcon />\n                                )\n                            }\n                            aria-label={'Open Menu'}\n                            onClick={toggleColorMode}\n                        />\n                        <Button\n                            display={{ base: 'none', md: 'block' }}\n                            variant={'solid'}\n                            colorScheme={'pink'}\n                            size={'sm'}\n                            mx={2}\n                            rightIcon={<GoSignOut size='13' />}\n                            onClick={() => auth.signOut()}\n                        >\n                            Sign out\n                        </Button>\n                        <Menu>\n                            <MenuButton\n                                as={Button}\n                                rounded={'full'}\n                                variant={'link'}\n                                cursor={'pointer'}\n                                minW={0}\n                            >\n                                <Avatar\n                                    size={'sm'}\n                                    src={auth.currentUser.photoURL}\n                                />\n                            </MenuButton>\n                            <MenuList display={{ md: 'none' }}>\n                                <MenuItem onClick={() => auth.signOut()}>\n                                    Sign Out\n                                </MenuItem>\n                                <MenuItem onClick={toggleColorMode}>\n                                    {colorMode === 'light' ? (\n                                        <Text>Dark</Text>\n                                    ) : (\n                                        <Text>Light</Text>\n                                    )}\n                                </MenuItem>\n                            </MenuList>\n                        </Menu>\n                    </Flex>\n                </Flex>\n\n                {isOpen ? (\n                    <Box pb={4} display={{ md: 'none' }}>\n                        <Stack as={'nav'} spacing={4}>\n                            {Links.map((link) => (\n                                <NavLink key={link.label}>{link}</NavLink>\n                            ))}\n                        </Stack>\n                    </Box>\n                ) : null}\n            </Box>\n            <Box p={4} overflowX='hidden'>{props.children}</Box>\n        </>\n    );\n}\n\n",["62","63"],"/home/bryanwg/projects/Tinder-Eats/Frontend/src/mock.ts",[],"/home/bryanwg/projects/Tinder-Eats/Frontend/src/Component/Card.tsx",["64","65","66","67","68","69","70","71"],"/home/bryanwg/projects/Tinder-Eats/Frontend/src/Pages/Matches.tsx",["72"],"/home/bryanwg/projects/Tinder-Eats/Frontend/src/functions.ts",["73"],{"ruleId":"74","severity":1,"message":"75","line":9,"column":10,"nodeType":"76","messageId":"77","endLine":9,"endColumn":21},{"ruleId":"74","severity":1,"message":"78","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":12},{"ruleId":"74","severity":1,"message":"79","line":7,"column":5,"nodeType":"76","messageId":"77","endLine":7,"endColumn":13},{"ruleId":"74","severity":1,"message":"80","line":15,"column":5,"nodeType":"76","messageId":"77","endLine":15,"endColumn":11},{"ruleId":"74","severity":1,"message":"81","line":17,"column":5,"nodeType":"76","messageId":"77","endLine":17,"endColumn":9},{"ruleId":"74","severity":1,"message":"82","line":21,"column":5,"nodeType":"76","messageId":"77","endLine":21,"endColumn":11},{"ruleId":"74","severity":1,"message":"83","line":138,"column":7,"nodeType":"76","messageId":"77","endLine":138,"endColumn":21},{"ruleId":"74","severity":1,"message":"84","line":3,"column":5,"nodeType":"76","messageId":"77","endLine":3,"endColumn":8},{"ruleId":"74","severity":1,"message":"85","line":7,"column":5,"nodeType":"76","messageId":"77","endLine":7,"endColumn":22},{"ruleId":"74","severity":1,"message":"86","line":10,"column":10,"nodeType":"76","messageId":"77","endLine":10,"endColumn":23},{"ruleId":"74","severity":1,"message":"87","line":47,"column":12,"nodeType":"76","messageId":"77","endLine":47,"endColumn":22},{"ruleId":"74","severity":1,"message":"88","line":1,"column":10,"nodeType":"76","messageId":"77","endLine":1,"endColumn":19},{"ruleId":"74","severity":1,"message":"89","line":15,"column":5,"nodeType":"76","messageId":"77","endLine":15,"endColumn":16},{"ruleId":"74","severity":1,"message":"90","line":25,"column":5,"nodeType":"76","messageId":"77","endLine":25,"endColumn":12},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"74","severity":1,"message":"84","line":2,"column":5,"nodeType":"76","messageId":"77","endLine":2,"endColumn":8},{"ruleId":"74","severity":1,"message":"95","line":18,"column":17,"nodeType":"76","messageId":"77","endLine":18,"endColumn":25},{"ruleId":"74","severity":1,"message":"96","line":18,"column":27,"nodeType":"76","messageId":"77","endLine":18,"endColumn":36},{"ruleId":"74","severity":1,"message":"97","line":42,"column":13,"nodeType":"76","messageId":"77","endLine":42,"endColumn":16},{"ruleId":"74","severity":1,"message":"98","line":42,"column":18,"nodeType":"76","messageId":"77","endLine":42,"endColumn":26},{"ruleId":"74","severity":1,"message":"99","line":43,"column":11,"nodeType":"76","messageId":"77","endLine":43,"endColumn":16},{"ruleId":"74","severity":1,"message":"100","line":123,"column":11,"nodeType":"76","messageId":"77","endLine":123,"endColumn":14},{"ruleId":"101","severity":1,"message":"102","line":178,"column":25,"nodeType":"103","messageId":"104","endLine":184,"endColumn":26,"fix":"105"},{"ruleId":"74","severity":1,"message":"106","line":5,"column":5,"nodeType":"76","messageId":"77","endLine":5,"endColumn":14},{"ruleId":"74","severity":1,"message":"96","line":1,"column":10,"nodeType":"76","messageId":"77","endLine":1,"endColumn":19},"@typescript-eslint/no-unused-vars","'GoArrowLeft' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'Redirect' is defined but never used.","'HStack' is defined but never used.","'Link' is defined but never used.","'VStack' is defined but never used.","'FacebookButton' is assigned a value but never used.","'Box' is defined but never used.","'useColorModeValue' is defined but never used.","'GetRestaurant' is defined but never used.","'restaurant' is assigned a value but never used.","'ReactNode' is defined but never used.","'MenuDivider' is defined but never used.","'AddIcon' is defined but never used.","no-native-reassign",["107"],"no-negated-in-lhs",["108"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'uid' is assigned a value but never used.","'photoURL' is assigned a value but never used.","'toast' is assigned a value but never used.","'key' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"109","text":"110"},"'Container' is defined but never used.","no-global-assign","no-unsafe-negation",[6118,6118]," rel=\"noreferrer\""]