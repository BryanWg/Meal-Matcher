[{"/home/bryanwg/projects/Tinder-Eats/Frontend/src/index.tsx":"1","/home/bryanwg/projects/Tinder-Eats/Frontend/src/theme.ts":"2","/home/bryanwg/projects/Tinder-Eats/Frontend/src/reportWebVitals.ts":"3","/home/bryanwg/projects/Tinder-Eats/Frontend/src/App.tsx":"4","/home/bryanwg/projects/Tinder-Eats/Frontend/src/functions.ts":"5","/home/bryanwg/projects/Tinder-Eats/Frontend/src/Pages/main.tsx":"6"},{"size":652,"mtime":1626771840006,"results":"7","hashOfConfig":"8"},{"size":318,"mtime":1626771840006,"results":"9","hashOfConfig":"8"},{"size":425,"mtime":1626771840006,"results":"10","hashOfConfig":"8"},{"size":863,"mtime":1626783005536,"results":"11","hashOfConfig":"8"},{"size":286,"mtime":1626771840006,"results":"12","hashOfConfig":"8"},{"size":885,"mtime":1626771840006,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bc0pba",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"/home/bryanwg/projects/Tinder-Eats/Frontend/src/index.tsx",[],"/home/bryanwg/projects/Tinder-Eats/Frontend/src/theme.ts",[],"/home/bryanwg/projects/Tinder-Eats/Frontend/src/reportWebVitals.ts",[],"/home/bryanwg/projects/Tinder-Eats/Frontend/src/App.tsx",["28","29","30"],"/home/bryanwg/projects/Tinder-Eats/Frontend/src/functions.ts",["31","32","33","34","35"],"/home/bryanwg/projects/Tinder-Eats/Frontend/src/Pages/main.tsx",["36","37"],"import { Box } from '@chakra-ui/react'\nimport React, { useState, useEffect } from 'react'\nimport TinderCard from 'react-tinder-card'\nimport CardDetails from '../Interfaces/cardDetails'\n\nconst Card = ({ ...props }, data: CardDetails[]) => {\n\n    const onSwipe = (direction: string) => {\n        console.log('You swiped: ' + direction)\n    }\n\n    const onCardLeftScreen = (myIdentifier: string) => {\n        console.log(myIdentifier + ' left the screen')\n    }\n\n    return (\n        <Box className=\"swipe\" borderRadius=\"lg\" bg=\"tomato\" >\n            <TinderCard onSwipe={onSwipe} onCardLeftScreen={() => onCardLeftScreen('fooBar')} preventSwipe={['up', 'down']} >\n                <Box bg=\"tomato\" w=\"500px\" h=\"700px\" p={4} borderRadius=\"md\" color=\"white\">\n                    This is the hihi\n                </Box>\n            </TinderCard>\n        </Box>\n\n    )\n}\n\nexport default Card;",["38","39"],{"ruleId":"40","severity":1,"message":"41","line":2,"column":8,"nodeType":"42","messageId":"43","endLine":2,"endColumn":12},{"ruleId":"40","severity":1,"message":"44","line":4,"column":8,"nodeType":"42","messageId":"43","endLine":4,"endColumn":18},{"ruleId":"40","severity":1,"message":"45","line":9,"column":10,"nodeType":"42","messageId":"43","endLine":9,"endColumn":19},{"ruleId":"40","severity":1,"message":"46","line":4,"column":11,"nodeType":"42","messageId":"43","endLine":4,"endColumn":14},{"ruleId":"40","severity":1,"message":"47","line":5,"column":11,"nodeType":"42","messageId":"43","endLine":5,"endColumn":23},{"ruleId":"40","severity":1,"message":"48","line":6,"column":11,"nodeType":"42","messageId":"43","endLine":6,"endColumn":18},{"ruleId":"40","severity":1,"message":"49","line":7,"column":11,"nodeType":"42","messageId":"43","endLine":7,"endColumn":15},{"ruleId":"40","severity":1,"message":"50","line":8,"column":11,"nodeType":"42","messageId":"43","endLine":8,"endColumn":19},{"ruleId":"40","severity":1,"message":"51","line":2,"column":17,"nodeType":"42","messageId":"43","endLine":2,"endColumn":25},{"ruleId":"40","severity":1,"message":"52","line":2,"column":27,"nodeType":"42","messageId":"43","endLine":2,"endColumn":36},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'TinderCard' is defined but never used.","'stringify' is defined but never used.","'key' is assigned a value but never used.","'neighborhood' is assigned a value but never used.","'borough' is assigned a value but never used.","'city' is assigned a value but never used.","'category' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-global-assign","no-unsafe-negation"]